version: 2.1

orbs:
  aws-ecs: circleci/aws-ecs@3.2.0
  aws-cli: circleci/aws-cli@3.1
  
commands:
  service-build:
    parameters:
      stack:
        default: 'buychain-dev'
        type: string
    steps:
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true
      - run:
          name: Tag image
          command: echo "export TAG=$(node -p "require('./package.json').version"))" >> $BASH_ENV
      - run:
          name: Build image
          command: docker build --build-arg NPM_TOKEN=$NPM_TOKEN -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/<< parameters.stack >>-$REPO:$TAG .
      - run:
          name: Tag image
          command: docker tag $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/<< parameters.stack >>-$REPO:$TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/<< parameters.stack >>-$REPO:$TAG
      - aws-cli/setup 
      - run:
          name: Login to Amazon ECR
          command: aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      - run:
          name: Push image
          command: docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/<< parameters.stack >>-$REPO:$TAG
      - run:
          name: Export stack name
          command: echo "export STACK_NAME=<< parameters.stack >>" >> $BASH_ENV
jobs:
  lint-test:
    working_directory: ~/auth-api
    docker:
      - image: circleci/node:16
      - image: circleci/mongo:5.0
    environment:
      - NODE_ENV: test
      - MONGODB_URL: mongodb://localhost:27017/buy-chain
    steps:
      - checkout
      - run:
          name: Install node packages from package.json
          command: npm install
      - run:
          name: Lint
          command: npm run lint-no-fix
      - run:
          name: Unit test
          command: npm run test-unit
      - run:
          name: Seeding
          command: npm run test-integration-seeding
      - run:
          name: Run the auth-api in the background to see
          command: npm start
          background: true
      # - run:
      #     name: Integration test
      #     command: npm run test-integration
      - persist_to_workspace:
          root: .
          paths:
            - .
  development-build-and-push-image:
    docker:
      - image: 'circleci/node:16'
    steps:
      - attach_workspace:
          at: .
      - service-build:
          stack: 'buychain-dev'
  demo-build-and-push-image:
    docker:
      - image: 'circleci/node:16'
    steps:
      - attach_workspace:
          at: .
      - service-build:
          stack: 'buychain-demo'
  production-build-and-push-image:
    docker:
      - image: 'circleci/node:16'
    steps:
      - attach_workspace:
          at: .
      - service-build:
          stack: 'buychain-prod'

workflows:
  build_and_push_image:
    jobs:
      - lint-test
      - development-build-and-push-image:
          context: dev
          requires:
            - lint-test
          filters:
            branches:
              only: development
      - aws-ecs/deploy-service-update:
          name: deploy-service-update-dev
          context: dev
          requires:
            - development-build-and-push-image 
          family: "buychain-dev-$REPO"
          service-name: "buychain-dev-$REPO-service"
          cluster: "buychain-dev-cluster-1"
          container-image-name-updates: "container=buychain-dev-$REPO,image-and-tag=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/buychain-dev-$REPO:latest"
          force-new-deployment: true
          verify-revision-is-deployed: true
          filters:
            branches:
              only: development
      - demo-build-and-push-image:
          context: dev
          requires:
            - lint-test
          filters:
            branches:
              only: main
      - aws-ecs/deploy-service-update:
          name: deploy-service-update-demo
          context: dev
          requires:
            - demo-build-and-push-image
          family: "buychain-demo-$REPO"
          service-name: "buychain-demo-$REPO-service"
          cluster: "buychain-demo>-cluster-1"
          container-image-name-updates: "container=buychain-demo-$REPO,image-and-tag=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/buychain-demo>-$REPO:latest"
          force-new-deployment: true
          verify-revision-is-deployed: true
          filters:
            branches:
              only: main
      - hold-deploy-prod:
          type: approval
          requires:
            - deploy-service-update-demo
          filters:
            branches:
              only: main
      - production-build-and-push-image:
          context: dev
          requires:
            - hold-deploy-prod
          filters:
            branches:
              only: main
      - aws-ecs/deploy-service-update:
          name: deploy-service-update-prod
          context: dev
          requires:
            - production-build-and-push-image
          family: "buychain-prod-$REPO"
          service-name: "buychain-prod-$REPO-service"
          cluster: "buychain-prod-cluster-1"
          container-image-name-updates: "container=buychain-prod-$REPO,image-and-tag=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/buychain-prod-$REPO:latest"
          force-new-deployment: true
          verify-revision-is-deployed: true
          filters:
            branches:
              only: main
